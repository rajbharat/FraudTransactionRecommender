#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISBADBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ISBA")]
	public partial class TransactionFilteringDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTransaction_Data(ISBADAL.Transaction_Data instance);
    partial void UpdateTransaction_Data(ISBADAL.Transaction_Data instance);
    partial void DeleteTransaction_Data(ISBADAL.Transaction_Data instance);
    partial void InsertCustomer_Data(ISBADAL.Customer_Data instance);
    partial void UpdateCustomer_Data(ISBADAL.Customer_Data instance);
    partial void DeleteCustomer_Data(ISBADAL.Customer_Data instance);
    partial void InsertRule_Parameter(ISBADAL.Rule_Parameter instance);
    partial void UpdateRule_Parameter(ISBADAL.Rule_Parameter instance);
    partial void DeleteRule_Parameter(ISBADAL.Rule_Parameter instance);
    #endregion
		
		public TransactionFilteringDataContext() : 
				base(global::ISBARecoPrj.Properties.Settings.Default.ISBAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TransactionFilteringDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransactionFilteringDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransactionFilteringDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TransactionFilteringDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ISBADAL.Transaction_Data> Transaction_Datas
		{
			get
			{
				return this.GetTable<ISBADAL.Transaction_Data>();
			}
		}
		
		public System.Data.Linq.Table<ISBADAL.Customer_Data> Customer_Datas
		{
			get
			{
				return this.GetTable<ISBADAL.Customer_Data>();
			}
		}
		
		public System.Data.Linq.Table<ISBADAL.Rule_Parameter> Rule_Parameters
		{
			get
			{
				return this.GetTable<ISBADAL.Rule_Parameter>();
			}
		}
	}
}
namespace ISBADAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Transaction_Data")]
	public partial class Transaction_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Account_ID;
		
		private string _Transaction_type;
		
		private double _Transaction_Amount;
		
		private string _Currency;
		
		private string _Transaction_Source;
		
		private System.Nullable<bool> _Denomination;
		
		private System.Nullable<System.DateTime> _Transaction_date;
		
		private string _Transaction_date_julian;
		
		private string _Orig_name;
		
		private string _Orig_bank;
		
		private string _Orig_Country;
		
		private string _Bene_Name;
		
		private string _Bene_Bank;
		
		private string _Bene_Country;
		
		private string _Transaction_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_IDChanging(string value);
    partial void OnAccount_IDChanged();
    partial void OnTransaction_typeChanging(string value);
    partial void OnTransaction_typeChanged();
    partial void OnTransaction_AmountChanging(double value);
    partial void OnTransaction_AmountChanged();
    partial void OnCurrencyChanging(string value);
    partial void OnCurrencyChanged();
    partial void OnTransaction_SourceChanging(string value);
    partial void OnTransaction_SourceChanged();
    partial void OnDenominationChanging(System.Nullable<bool> value);
    partial void OnDenominationChanged();
    partial void OnTransaction_dateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransaction_dateChanged();
    partial void OnTransaction_date_julianChanging(string value);
    partial void OnTransaction_date_julianChanged();
    partial void OnOrig_nameChanging(string value);
    partial void OnOrig_nameChanged();
    partial void OnOrig_bankChanging(string value);
    partial void OnOrig_bankChanged();
    partial void OnOrig_CountryChanging(string value);
    partial void OnOrig_CountryChanged();
    partial void OnBene_NameChanging(string value);
    partial void OnBene_NameChanged();
    partial void OnBene_BankChanging(string value);
    partial void OnBene_BankChanged();
    partial void OnBene_CountryChanging(string value);
    partial void OnBene_CountryChanged();
    partial void OnTransaction_IDChanging(string value);
    partial void OnTransaction_IDChanged();
    #endregion
		
		public Transaction_Data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_ID", DbType="VarChar(50)")]
		public string Account_ID
		{
			get
			{
				return this._Account_ID;
			}
			set
			{
				if ((this._Account_ID != value))
				{
					this.OnAccount_IDChanging(value);
					this.SendPropertyChanging();
					this._Account_ID = value;
					this.SendPropertyChanged("Account_ID");
					this.OnAccount_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_type", DbType="NVarChar(10)")]
		public string Transaction_type
		{
			get
			{
				return this._Transaction_type;
			}
			set
			{
				if ((this._Transaction_type != value))
				{
					this.OnTransaction_typeChanging(value);
					this.SendPropertyChanging();
					this._Transaction_type = value;
					this.SendPropertyChanged("Transaction_type");
					this.OnTransaction_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Amount", DbType="Float NOT NULL")]
		public double Transaction_Amount
		{
			get
			{
				return this._Transaction_Amount;
			}
			set
			{
				if ((this._Transaction_Amount != value))
				{
					this.OnTransaction_AmountChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Amount = value;
					this.SendPropertyChanged("Transaction_Amount");
					this.OnTransaction_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Currency", DbType="NVarChar(10)")]
		public string Currency
		{
			get
			{
				return this._Currency;
			}
			set
			{
				if ((this._Currency != value))
				{
					this.OnCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Currency = value;
					this.SendPropertyChanged("Currency");
					this.OnCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_Source", DbType="NVarChar(50)")]
		public string Transaction_Source
		{
			get
			{
				return this._Transaction_Source;
			}
			set
			{
				if ((this._Transaction_Source != value))
				{
					this.OnTransaction_SourceChanging(value);
					this.SendPropertyChanging();
					this._Transaction_Source = value;
					this.SendPropertyChanged("Transaction_Source");
					this.OnTransaction_SourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Denomination", DbType="Bit")]
		public System.Nullable<bool> Denomination
		{
			get
			{
				return this._Denomination;
			}
			set
			{
				if ((this._Denomination != value))
				{
					this.OnDenominationChanging(value);
					this.SendPropertyChanging();
					this._Denomination = value;
					this.SendPropertyChanged("Denomination");
					this.OnDenominationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_date", DbType="Date")]
		public System.Nullable<System.DateTime> Transaction_date
		{
			get
			{
				return this._Transaction_date;
			}
			set
			{
				if ((this._Transaction_date != value))
				{
					this.OnTransaction_dateChanging(value);
					this.SendPropertyChanging();
					this._Transaction_date = value;
					this.SendPropertyChanged("Transaction_date");
					this.OnTransaction_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_date_julian", DbType="NVarChar(50)")]
		public string Transaction_date_julian
		{
			get
			{
				return this._Transaction_date_julian;
			}
			set
			{
				if ((this._Transaction_date_julian != value))
				{
					this.OnTransaction_date_julianChanging(value);
					this.SendPropertyChanging();
					this._Transaction_date_julian = value;
					this.SendPropertyChanged("Transaction_date_julian");
					this.OnTransaction_date_julianChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orig_name", DbType="NVarChar(50)")]
		public string Orig_name
		{
			get
			{
				return this._Orig_name;
			}
			set
			{
				if ((this._Orig_name != value))
				{
					this.OnOrig_nameChanging(value);
					this.SendPropertyChanging();
					this._Orig_name = value;
					this.SendPropertyChanged("Orig_name");
					this.OnOrig_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orig_bank", DbType="NVarChar(50)")]
		public string Orig_bank
		{
			get
			{
				return this._Orig_bank;
			}
			set
			{
				if ((this._Orig_bank != value))
				{
					this.OnOrig_bankChanging(value);
					this.SendPropertyChanging();
					this._Orig_bank = value;
					this.SendPropertyChanged("Orig_bank");
					this.OnOrig_bankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Orig_Country", DbType="NVarChar(50)")]
		public string Orig_Country
		{
			get
			{
				return this._Orig_Country;
			}
			set
			{
				if ((this._Orig_Country != value))
				{
					this.OnOrig_CountryChanging(value);
					this.SendPropertyChanging();
					this._Orig_Country = value;
					this.SendPropertyChanged("Orig_Country");
					this.OnOrig_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bene_Name", DbType="NVarChar(50)")]
		public string Bene_Name
		{
			get
			{
				return this._Bene_Name;
			}
			set
			{
				if ((this._Bene_Name != value))
				{
					this.OnBene_NameChanging(value);
					this.SendPropertyChanging();
					this._Bene_Name = value;
					this.SendPropertyChanged("Bene_Name");
					this.OnBene_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bene_Bank", DbType="NVarChar(50)")]
		public string Bene_Bank
		{
			get
			{
				return this._Bene_Bank;
			}
			set
			{
				if ((this._Bene_Bank != value))
				{
					this.OnBene_BankChanging(value);
					this.SendPropertyChanging();
					this._Bene_Bank = value;
					this.SendPropertyChanged("Bene_Bank");
					this.OnBene_BankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bene_Country", DbType="NVarChar(50)")]
		public string Bene_Country
		{
			get
			{
				return this._Bene_Country;
			}
			set
			{
				if ((this._Bene_Country != value))
				{
					this.OnBene_CountryChanging(value);
					this.SendPropertyChanging();
					this._Bene_Country = value;
					this.SendPropertyChanged("Bene_Country");
					this.OnBene_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Transaction_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Transaction_ID
		{
			get
			{
				return this._Transaction_ID;
			}
			set
			{
				if ((this._Transaction_ID != value))
				{
					this.OnTransaction_IDChanging(value);
					this.SendPropertyChanging();
					this._Transaction_ID = value;
					this.SendPropertyChanged("Transaction_ID");
					this.OnTransaction_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer_Data")]
	public partial class Customer_Data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Account_number;
		
		private string _Account_Type;
		
		private string _Customer_type;
		
		private string _Customer_Role;
		
		private string _Account_Currency;
		
		private string _Customer_Risk;
		
		private string _Customer_Organisation;
		
		private string _Customer_Country;
		
		private int _Customer_Limit;
		
		private string _Customer_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccount_numberChanging(string value);
    partial void OnAccount_numberChanged();
    partial void OnAccount_TypeChanging(string value);
    partial void OnAccount_TypeChanged();
    partial void OnCustomer_typeChanging(string value);
    partial void OnCustomer_typeChanged();
    partial void OnCustomer_RoleChanging(string value);
    partial void OnCustomer_RoleChanged();
    partial void OnAccount_CurrencyChanging(string value);
    partial void OnAccount_CurrencyChanged();
    partial void OnCustomer_RiskChanging(string value);
    partial void OnCustomer_RiskChanged();
    partial void OnCustomer_OrganisationChanging(string value);
    partial void OnCustomer_OrganisationChanged();
    partial void OnCustomer_CountryChanging(string value);
    partial void OnCustomer_CountryChanged();
    partial void OnCustomer_LimitChanging(int value);
    partial void OnCustomer_LimitChanged();
    partial void OnCustomer_IDChanging(string value);
    partial void OnCustomer_IDChanged();
    #endregion
		
		public Customer_Data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_number", DbType="NVarChar(50)")]
		public string Account_number
		{
			get
			{
				return this._Account_number;
			}
			set
			{
				if ((this._Account_number != value))
				{
					this.OnAccount_numberChanging(value);
					this.SendPropertyChanging();
					this._Account_number = value;
					this.SendPropertyChanged("Account_number");
					this.OnAccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Type", DbType="NVarChar(50)")]
		public string Account_Type
		{
			get
			{
				return this._Account_Type;
			}
			set
			{
				if ((this._Account_Type != value))
				{
					this.OnAccount_TypeChanging(value);
					this.SendPropertyChanging();
					this._Account_Type = value;
					this.SendPropertyChanged("Account_Type");
					this.OnAccount_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_type", DbType="NVarChar(50)")]
		public string Customer_type
		{
			get
			{
				return this._Customer_type;
			}
			set
			{
				if ((this._Customer_type != value))
				{
					this.OnCustomer_typeChanging(value);
					this.SendPropertyChanging();
					this._Customer_type = value;
					this.SendPropertyChanged("Customer_type");
					this.OnCustomer_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Role", DbType="NVarChar(50)")]
		public string Customer_Role
		{
			get
			{
				return this._Customer_Role;
			}
			set
			{
				if ((this._Customer_Role != value))
				{
					this.OnCustomer_RoleChanging(value);
					this.SendPropertyChanging();
					this._Customer_Role = value;
					this.SendPropertyChanged("Customer_Role");
					this.OnCustomer_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Account_Currency", DbType="NChar(10)")]
		public string Account_Currency
		{
			get
			{
				return this._Account_Currency;
			}
			set
			{
				if ((this._Account_Currency != value))
				{
					this.OnAccount_CurrencyChanging(value);
					this.SendPropertyChanging();
					this._Account_Currency = value;
					this.SendPropertyChanged("Account_Currency");
					this.OnAccount_CurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Risk", DbType="NChar(10)")]
		public string Customer_Risk
		{
			get
			{
				return this._Customer_Risk;
			}
			set
			{
				if ((this._Customer_Risk != value))
				{
					this.OnCustomer_RiskChanging(value);
					this.SendPropertyChanging();
					this._Customer_Risk = value;
					this.SendPropertyChanged("Customer_Risk");
					this.OnCustomer_RiskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Organisation", DbType="NVarChar(50)")]
		public string Customer_Organisation
		{
			get
			{
				return this._Customer_Organisation;
			}
			set
			{
				if ((this._Customer_Organisation != value))
				{
					this.OnCustomer_OrganisationChanging(value);
					this.SendPropertyChanging();
					this._Customer_Organisation = value;
					this.SendPropertyChanged("Customer_Organisation");
					this.OnCustomer_OrganisationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Country", DbType="NVarChar(50)")]
		public string Customer_Country
		{
			get
			{
				return this._Customer_Country;
			}
			set
			{
				if ((this._Customer_Country != value))
				{
					this.OnCustomer_CountryChanging(value);
					this.SendPropertyChanging();
					this._Customer_Country = value;
					this.SendPropertyChanged("Customer_Country");
					this.OnCustomer_CountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Limit", DbType="Int NOT NULL")]
		public int Customer_Limit
		{
			get
			{
				return this._Customer_Limit;
			}
			set
			{
				if ((this._Customer_Limit != value))
				{
					this.OnCustomer_LimitChanging(value);
					this.SendPropertyChanging();
					this._Customer_Limit = value;
					this.SendPropertyChanged("Customer_Limit");
					this.OnCustomer_LimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rule_Parameter")]
	public partial class Rule_Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Rule_ID;
		
		private string _Rule_Short_Name;
		
		private string _Rule_Description;
		
		private string _Cust_Type;
		
		private System.Nullable<int> _Tot_Trx_Amount;
		
		private System.Nullable<int> _Tot_Trx_Count;
		
		private System.Nullable<bool> _isDenom;
		
		private System.Nullable<int> _dr_txn_amount;
		
		private System.Nullable<int> _dr_trx_cnt;
		
		private System.Nullable<int> _cr_trx_amt;
		
		private System.Nullable<int> _cr_txn_cnt;
		
		private System.Nullable<int> _cust_risk;
		
		private System.Nullable<bool> _ftc_ind;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRule_IDChanging(int value);
    partial void OnRule_IDChanged();
    partial void OnRule_Short_NameChanging(string value);
    partial void OnRule_Short_NameChanged();
    partial void OnRule_DescriptionChanging(string value);
    partial void OnRule_DescriptionChanged();
    partial void OnCust_TypeChanging(string value);
    partial void OnCust_TypeChanged();
    partial void OnTot_Trx_AmountChanging(System.Nullable<int> value);
    partial void OnTot_Trx_AmountChanged();
    partial void OnTot_Trx_CountChanging(System.Nullable<int> value);
    partial void OnTot_Trx_CountChanged();
    partial void OnisDenomChanging(System.Nullable<bool> value);
    partial void OnisDenomChanged();
    partial void Ondr_txn_amountChanging(System.Nullable<int> value);
    partial void Ondr_txn_amountChanged();
    partial void Ondr_trx_cntChanging(System.Nullable<int> value);
    partial void Ondr_trx_cntChanged();
    partial void Oncr_trx_amtChanging(System.Nullable<int> value);
    partial void Oncr_trx_amtChanged();
    partial void Oncr_txn_cntChanging(System.Nullable<int> value);
    partial void Oncr_txn_cntChanged();
    partial void Oncust_riskChanging(System.Nullable<int> value);
    partial void Oncust_riskChanged();
    partial void Onftc_indChanging(System.Nullable<bool> value);
    partial void Onftc_indChanged();
    #endregion
		
		public Rule_Parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Rule_ID
		{
			get
			{
				return this._Rule_ID;
			}
			set
			{
				if ((this._Rule_ID != value))
				{
					this.OnRule_IDChanging(value);
					this.SendPropertyChanging();
					this._Rule_ID = value;
					this.SendPropertyChanged("Rule_ID");
					this.OnRule_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_Short_Name", DbType="NVarChar(50)")]
		public string Rule_Short_Name
		{
			get
			{
				return this._Rule_Short_Name;
			}
			set
			{
				if ((this._Rule_Short_Name != value))
				{
					this.OnRule_Short_NameChanging(value);
					this.SendPropertyChanging();
					this._Rule_Short_Name = value;
					this.SendPropertyChanged("Rule_Short_Name");
					this.OnRule_Short_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rule_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Rule_Description
		{
			get
			{
				return this._Rule_Description;
			}
			set
			{
				if ((this._Rule_Description != value))
				{
					this.OnRule_DescriptionChanging(value);
					this.SendPropertyChanging();
					this._Rule_Description = value;
					this.SendPropertyChanged("Rule_Description");
					this.OnRule_DescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cust_Type", DbType="NChar(10)")]
		public string Cust_Type
		{
			get
			{
				return this._Cust_Type;
			}
			set
			{
				if ((this._Cust_Type != value))
				{
					this.OnCust_TypeChanging(value);
					this.SendPropertyChanging();
					this._Cust_Type = value;
					this.SendPropertyChanged("Cust_Type");
					this.OnCust_TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tot_Trx_Amount", DbType="Int")]
		public System.Nullable<int> Tot_Trx_Amount
		{
			get
			{
				return this._Tot_Trx_Amount;
			}
			set
			{
				if ((this._Tot_Trx_Amount != value))
				{
					this.OnTot_Trx_AmountChanging(value);
					this.SendPropertyChanging();
					this._Tot_Trx_Amount = value;
					this.SendPropertyChanged("Tot_Trx_Amount");
					this.OnTot_Trx_AmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tot_Trx_Count", DbType="Int")]
		public System.Nullable<int> Tot_Trx_Count
		{
			get
			{
				return this._Tot_Trx_Count;
			}
			set
			{
				if ((this._Tot_Trx_Count != value))
				{
					this.OnTot_Trx_CountChanging(value);
					this.SendPropertyChanging();
					this._Tot_Trx_Count = value;
					this.SendPropertyChanged("Tot_Trx_Count");
					this.OnTot_Trx_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDenom", DbType="Bit")]
		public System.Nullable<bool> isDenom
		{
			get
			{
				return this._isDenom;
			}
			set
			{
				if ((this._isDenom != value))
				{
					this.OnisDenomChanging(value);
					this.SendPropertyChanging();
					this._isDenom = value;
					this.SendPropertyChanged("isDenom");
					this.OnisDenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_txn_amount", DbType="Int")]
		public System.Nullable<int> dr_txn_amount
		{
			get
			{
				return this._dr_txn_amount;
			}
			set
			{
				if ((this._dr_txn_amount != value))
				{
					this.Ondr_txn_amountChanging(value);
					this.SendPropertyChanging();
					this._dr_txn_amount = value;
					this.SendPropertyChanged("dr_txn_amount");
					this.Ondr_txn_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dr_trx_cnt", DbType="Int")]
		public System.Nullable<int> dr_trx_cnt
		{
			get
			{
				return this._dr_trx_cnt;
			}
			set
			{
				if ((this._dr_trx_cnt != value))
				{
					this.Ondr_trx_cntChanging(value);
					this.SendPropertyChanging();
					this._dr_trx_cnt = value;
					this.SendPropertyChanged("dr_trx_cnt");
					this.Ondr_trx_cntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cr_trx_amt", DbType="Int")]
		public System.Nullable<int> cr_trx_amt
		{
			get
			{
				return this._cr_trx_amt;
			}
			set
			{
				if ((this._cr_trx_amt != value))
				{
					this.Oncr_trx_amtChanging(value);
					this.SendPropertyChanging();
					this._cr_trx_amt = value;
					this.SendPropertyChanged("cr_trx_amt");
					this.Oncr_trx_amtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cr_txn_cnt", DbType="Int")]
		public System.Nullable<int> cr_txn_cnt
		{
			get
			{
				return this._cr_txn_cnt;
			}
			set
			{
				if ((this._cr_txn_cnt != value))
				{
					this.Oncr_txn_cntChanging(value);
					this.SendPropertyChanging();
					this._cr_txn_cnt = value;
					this.SendPropertyChanged("cr_txn_cnt");
					this.Oncr_txn_cntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_risk", DbType="Int")]
		public System.Nullable<int> cust_risk
		{
			get
			{
				return this._cust_risk;
			}
			set
			{
				if ((this._cust_risk != value))
				{
					this.Oncust_riskChanging(value);
					this.SendPropertyChanging();
					this._cust_risk = value;
					this.SendPropertyChanged("cust_risk");
					this.Oncust_riskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ftc_ind", DbType="Bit")]
		public System.Nullable<bool> ftc_ind
		{
			get
			{
				return this._ftc_ind;
			}
			set
			{
				if ((this._ftc_ind != value))
				{
					this.Onftc_indChanging(value);
					this.SendPropertyChanging();
					this._ftc_ind = value;
					this.SendPropertyChanged("ftc_ind");
					this.Onftc_indChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
